<%- layout("/layouts/boilerplate") %>

<style>
  .btn-addToCart {
    background-color: #f5777b;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.08);
    border-radius: 20px;
    padding: 0.9rem 1.2rem;
    border: none;
    width: auto;
    font-size: 0.95rem;
    min-width: 120px;
    transition: background 0.2s;
  }
  .btn-addToCart:hover {
    background-color: #fe424d;
  }
  .animated-button {
    position: relative;
    overflow: hidden;
    color: white;
    transition: all 0.4s ease;
    text-align: center;
  }

  .animated-button .btn-text {
    opacity: 1;
    transition: opacity 0.3s ease;
  }

  .animated-button .spinner,
  .animated-button .checkmark {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .spinner {
    width: 22px;
    height: 22px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-top: 3px solid white;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    opacity: 0;
    transition: opacity 0.3s;
  }

  @keyframes spin {
    to {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }

  .checkmark svg {
    width: 24px;
    height: 24px;
    stroke: white;
    stroke-width: 3;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;
    stroke-dasharray: 24;
    stroke-dashoffset: 24;
    animation: none;
  }

  @keyframes draw {
    to {
      stroke-dashoffset: 0;
    }
  }

  .animated-button.loading {
    background-color: #1a73e8 !important;
    width: 60px;
    padding: 0.9rem 0 !important;
    border-radius: 50% !important;
  }

  .animated-button.loading .btn-text {
    opacity: 0;
  }

  .animated-button.loading .spinner {
    opacity: 1;
  }

  .animated-button.success {
    background-color: #4bb543 !important;
  }

  .animated-button.success .spinner {
    opacity: 0;
  }

  .animated-button.success .checkmark {
    opacity: 1;
  }

  .animated-button.success .checkmark svg {
    animation: draw 0.5s ease forwards;
  }
</style>

<div class="row mt-3">
  <div class="col-8 offset-3">
    <h3><b><%= listing.title %></b></h3>
  </div>
  <div class="card-edit col-6 offset-3 show-card listing-card">
    <img
      src="<%= listing.image.url %>"
      class="card-img-top show-img"
      alt="Listing Image"
    />
    <div class="card-body">
      <p class="card-text">
        <br />
        Owned by: <i><b><%= listing.owner?.username || "saikat" %></b></i
        ><br /><br />
        Description: <i><b><%= listing.description %></b></i
        ><br /><br />
        Price: â‚¹<i
          ><b
            ><%= listing.price?.toLocaleString("en-IN") || "N/A" %> per/night</b
          ></i
        ><br /><br />
        Location: <i><b><%= listing.location %></b></i
        ><br /><br />
        Country: <i><b><%= listing.country %></b></i>
      </p>
    </div>
    <br /><br />
    <div>
      <form id="addToCartForm" style="display: inline">
        <button
          type="button"
          class="btn-addToCart animated-button"
          id="addToCartBtn"
          data-listing-id="<%= listing._id %>"
          data-gotocart="<%= cart && cart.some(item => item.id === listing._id.toString()) %>"
          style="<%= cart && cart.some(item => item.id === listing._id.toString()) ? 'background-color:#198754;' : '' %>"
        >
          <span class="btn-text">
            <%= cart && cart.some(item => item.id === listing._id.toString()) ?
            "Go to cart" : "Add to cart" %>
          </span>
          <span class="spinner" aria-hidden="true"></span>
          <span class="checkmark" aria-hidden="true">
            <svg viewBox="0 0 24 24">
              <polyline points="20 6 9 17 4 12" />
            </svg>
          </span>
        </button>
      </form>
      <script>
        const addToCartBtn = document.getElementById("addToCartBtn");
        if (addToCartBtn) {
          const btnText = addToCartBtn.querySelector(".btn-text");
          const spinner = addToCartBtn.querySelector(".spinner");
          const checkmark = addToCartBtn.querySelector(".checkmark");
          let added = addToCartBtn.dataset.gotocart === "true";

          addToCartBtn.addEventListener("click", async function () {
            if (added) {
              window.location.href = "/listings/cart";
              return;
            }

            addToCartBtn.classList.add("loading");
            btnText.style.opacity = "0";
            spinner.style.opacity = "1";
            checkmark.style.opacity = "0";

            setTimeout(() => {
              addToCartBtn.classList.remove("loading");
              addToCartBtn.classList.add("success");
              spinner.style.opacity = "0";
              checkmark.style.opacity = "1";
            }, 500);

            setTimeout(async () => {
              addToCartBtn.classList.remove("success");
              checkmark.style.opacity = "0";
              btnText.textContent = "Go to cart";
              btnText.style.opacity = "1";
              addToCartBtn.style.backgroundColor = "#198754";
              added = true;

              const listingId = addToCartBtn.dataset.listingId;
              let price = Number("<%= listing.price %>");
              const taxSwitch = document.getElementById("switchCheckDefault");
              if (taxSwitch && taxSwitch.checked) {
                price = Math.round(price * 1.18);
              }

              try {
                const response = await fetch(
                  `/listings/${listingId}/add-to-cart`,
                  {
                    method: "POST",
                    headers: {
                      "X-Requested-With": "XMLHttpRequest",
                      "Content-Type": "application/json",
                      Accept: "application/json",
                    },
                    body: JSON.stringify({ price }),
                  }
                );

                const contentType = response.headers.get("content-type");
                const isJSON =
                  contentType && contentType.includes("application/json");
                const data = isJSON ? await response.json() : null;

                if (!response.ok) {
                  const errorMsg =
                    (data && data.error) || "Failed to add to cart.";
                  if (errorMsg.toLowerCase().includes("login")) {
                    return (window.location.href = "/login");
                  }
                  throw new Error(errorMsg);
                }

                // Show success flash
                const flashDiv = document.createElement("div");
                flashDiv.className =
                  "alert alert-success position-fixed top-0 start-50 translate-middle-x mt-3";
                flashDiv.style.zIndex = 9999;
                flashDiv.textContent = data.message;
                document.body.appendChild(flashDiv);
                setTimeout(() => flashDiv.remove(), 2000);

                // Update cart badge
                const badge = document.getElementById("cart-badge");
                if (badge) {
                  badge.textContent = data.cartCount;
                  badge.style.display =
                    data.cartCount > 0 ? "inline-block" : "none";
                }
              } catch (err) {
                btnText.textContent = "Add to cart";
                btnText.style.opacity = "1";
                addToCartBtn.classList.remove("loading", "success");
                spinner.style.opacity = "0";
                checkmark.style.opacity = "0";
                alert(err.message || "Failed to add to cart.");
              }
            }, 1200);
          });
        }
      </script>
    </div>
  </div>

  <% if (user && listing.owner && user._id && listing.owner._id &&
  user._id.toString() === listing.owner._id.toString()) { %>
  <div class="btns mt-2 d-flex offset-3 gap-2 flex-wrap">
    <a href="/listings/<%= listing._id %>/edit" class="btn btn-dark edit-btn"
      >Edit</a
    >
    <form
      method="POST"
      action="/listings/<%= listing._id %>?_method=DELETE"
      style="display: inline"
    >
      <button class="btn btn-dark offset-5">Delete</button>
    </form>
  </div>
  <% } %>

  <div class="col-8 offset-3">
    <hr />
    <h4>Leave a Review</h4>
    <form
      action="/listings/<%= listing.id %>/reviews"
      method="post"
      novalidate
      class="needs-validation"
    >
      <fieldset class="starability-coinFlip">
        <% for(let i = 1; i <= 5; i++) { %>
        <input
          type="radio"
          id="rate-<%= i %>"
          name="review[rating]"
          value="<%= i %>"
        />
        <label for="rate-<%= i %>"><%= i %> star</label>
        <% } %>
      </fieldset>
      <div class="mt-3 mb-3">
        <label for="comment" class="form-label">Comments</label>
        <textarea
          name="review[comment]"
          id="comment"
          cols="30"
          rows="5"
          class="form-control"
          required
        ></textarea>
        <div class="invalid-feedback">Please add some comments for review</div>
      </div>
      <button class="btn btn-outline-dark"><b>Submit</b></button>
    </form>

    <hr />
    <p><b>All Reviews</b></p>
    <div class="row">
      <% for(let review of listing.reviews) { %>
      <div class="card col-5 ms-3 mb-3">
        <div class="card-body">
          <h5 class="card-title mt-2">
            <%= review.author ? review.author.username : "Anonymous" %>
          </h5>
          <p
            class="starability-result card-text"
            data-rating="<%= review.rating %>"
          ></p>
          <div class="card-text"><%= review.comment %></div>
          <% if (user && review.author && review.author._id && user._id &&
          review.author._id.toString() === user._id.toString()) { %>
          <form
            class="mb-3"
            method="POST"
            action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=DELETE"
          >
            <button class="btn btn-dark btn-sm mt-2">Delete</button>
          </form>
          <% } %>
        </div>
      </div>
      <% } %>
    </div>
  </div>
</div>
